{"version":3,"sources":["components/MenuBar.js","components/App.js","index.js"],"names":["MenuBar","react_default","a","createElement","class","PlayController","play","iconName","pause","start","App","state","condition","onInputChange","event","_this","typed","toggle","setState","console","log","options","strings","this","props","typeSpeed","backSpeed","loop","shuffle","Typed","el","destroy","_this2","className","components_MenuBar","style","whiteSpace","ref","concat","onClick","reset","React","Component","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"oNAeeA,EAbC,WACf,OACCC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,6CACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACVH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,sBAAT,UACAH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,sBAAT,eCFCC,EAAiB,CACtBC,KAAM,CACLC,SAAU,QAEXC,MAAO,CACND,SAAU,UAQRE,GAAQ,EA+EGC,6MA7EdC,MAAQ,CAAEC,UAAWH,KAGrBI,cAAgB,SAAAC,GAEdL,GADa,IAAVA,EAMJM,EAAKC,MAAMC,SACXF,EAAKG,SAAS,CAAEN,UAAWH,IAC3BU,QAAQC,IAAIL,EAAKJ,MAAMC,+FAIJ,IAGbS,EAAU,CACfC,QAHmBC,KAAKC,MAAjBF,QAIPG,UAAW,IACXC,UAAW,GACXC,MAAM,EACNC,SAAS,GAGVL,KAAKP,MAAQ,IAAIa,IAAMN,KAAKO,GAAIT,kDAOhCE,KAAKP,MAAMe,2CAGH,IAAAC,EAAAT,KAEFjB,GA5Cc,IA4CMiB,KAAKZ,MAAMC,UA5CV,OAAS,QA6C5BL,EAAaF,EAAeC,GAA5BC,SACR,OACCN,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,UACdhC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,6DACdhC,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,qBACdhC,EAAAC,EAAAC,cAAA,MAAI8B,UAAU,sBAAd,SACAhC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,aACdhC,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,QACCgC,MAAO,CAAEC,WAAY,OACrBC,IAAK,SAAAP,GACJE,EAAKF,GAAKA,QAMf7B,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,cAEdhC,EAAAC,EAAAC,cAAA,WAvBU,YAyBVF,EAAAC,EAAAC,cAAA,KAAG8B,UAAS,GAAAK,OAAK/B,EAAL,kCAA+CgC,QAAShB,KAAKV,gBACzEZ,EAAAC,EAAAC,cAAA,KACC8B,UAAU,+CACVM,QAAS,kBAAMP,EAAKhB,MAAMwB,WAE3BvC,EAAAC,EAAAC,cAAA,KAAG8B,UAAU,sCAAsCM,QAAS,kBAAMP,EAAKhB,MAAMe,wBArElEU,IAAMC,WChBxBC,IAASC,OACR3C,EAAAC,EAAAC,cAAC0C,EAAD,CACCvB,QAAS,CACR,iBACA,qDACA,uDACA,yCACA,kCACA,mBACA,0CAGFwB,SAASC,cAAc","file":"static/js/main.a033a70e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MenuBar = () => {\r\n\treturn (\r\n\t\t<div class=\"ui container\">\r\n\t\t\t<div class=\"ui large secondary inverted pointing menu\">\r\n\t\t\t\t<div class=\"right item\">\r\n\t\t\t\t\t<a class=\"ui inverted button\">Resume</a>\r\n\t\t\t\t\t<a class=\"ui inverted button\">Contact</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react';\nimport './App.css';\nimport Typed from 'typed.js';\nimport MenuBar from './MenuBar';\n\n//Control which iconname\nconst PlayController = {\n\tplay: {\n\t\ticonName: 'play',\n\t},\n\tpause: {\n\t\ticonName: 'pause',\n\t},\n};\n\nconst getCondition = condition => {\n\treturn condition === true ? 'play' : 'pause';\n};\n\nvar start = false;\nclass App extends React.Component {\n\tstate = { condition: start };\n\n\t//switch the bool val\n\tonInputChange = event => {\n\t\tif (start === true) {\n\t\t\tstart = false;\n\t\t} else {\n\t\t\tstart = true;\n\t\t}\n\n\t\tthis.typed.toggle();\n\t\tthis.setState({ condition: start });\n\t\tconsole.log(this.state.condition);\n\t};\n\n\t//Did rendered\n\tcomponentDidMount() {\n\t\tconst { strings } = this.props;\n\t\t//other options such as typing speed, back speed, etc.\n\t\tconst options = {\n\t\t\tstrings: strings,\n\t\t\ttypeSpeed: 100,\n\t\t\tbackSpeed: 50,\n\t\t\tloop: true,\n\t\t\tshuffle: false,\n\t\t};\n\t\t// this.el refers to the <span> in the render() method\n\t\tthis.typed = new Typed(this.el, options);\n\t}\n\n\t//Did update and rendered\n\tcomponentWillUnmount() {\n\t\t// To destroy Typed instance on unmounting\n\t\t// to prevent memory leaks\n\t\tthis.typed.destroy();\n\t}\n\n\trender() {\n\t\tvar playText = 'Control: ';\n\t\tconst play = getCondition(this.state.condition);\n\t\tconst { iconName } = PlayController[play];\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"pusher\">\n\t\t\t\t\t<div className=\"wrap ui inverted vertical masthead center aligned segment\">\n\t\t\t\t\t\t<MenuBar />\n\t\t\t\t\t\t<div className=\"ui text container\">\n\t\t\t\t\t\t\t<h1 className=\"ui inverted header\">HENRY</h1>\n\t\t\t\t\t\t\t<div className=\"type-wrap\">\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tstyle={{ whiteSpace: 'pre' }}\n\t\t\t\t\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\t\t\t\t\tthis.el = el;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"buttonsDiv\">\n\t\t\t\t\t\t\t{/*get iconname at real time */}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{playText}\n\t\t\t\t\t\t\t<i className={`${iconName} icon buttonHover buttonHover1`} onClick={this.onInputChange} />\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"redo alternate icon buttonHover buttonHover2\"\n\t\t\t\t\t\t\t\tonClick={() => this.typed.reset()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<i className=\"trash icon buttonHover buttonHover3\" onClick={() => this.typed.destroy()} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n\t<App\n\t\tstrings={[\n\t\t\t\"Hi, I'm Henry.\",\n\t\t\t'I am a <strong><i>Software Developer.</i></strong>',\n\t\t\t'I graduated from <strong>Purdue University.</strong>',\n\t\t\t'I do <strong>Web Development.</strong>',\n\t\t\t'I do other exciting stuffs too!',\n\t\t\t'I am trilingual.',\n\t\t\t'I am a <strong>team player.</strong>',\n\t\t]}\n\t/>,\n\tdocument.querySelector('#root'),\n);\n"],"sourceRoot":""}